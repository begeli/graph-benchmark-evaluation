#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

usage() {
   cat << EOF
Usage: $(basename "${BASH_SOURCE[@]}") --hostname <HOSTNAME> [--target-dir <PATH>]

Create janusgraph-cql-server.properties file which correctly configures the 
backend properties of Janusgraph by setting the storage.hostname to the 
hostname of Cassandra seed.

Available options:
-h, --help        Print this help and exit
    --hostname    Hostname of the Cassandra seed
    --target-dir  Location where the configuration file will be created
                    [default: /scratch/snx3000/${USER}/janusgraph-bench/janusgraph]
EOF
   exit 
}

cleanup() {
   trap - SIGINT SIGTERM ERR EXIT
}

msg() {
   echo >&2 -e "${1-}"
}

die() {
   local msg=$1
   local code=${2-1}
   msg "$msg"
   exit "$code"
}

parse_params() {
   hostname=''
   output_dir="/scratch/snx3000/${USER}/janusgraph-bench/janusgraph"

   while :; do
     case "${1-}" in
     -h | --help) usage;;
     -v | --verbose) set -x ;;
     --hostname)
        hostname="${2-}"
        shift
        ;;
     --target-dir)
        output_dir="${2-}"
        shift
        ;;
     -?*) die "Unknown option: $1" ;;
     *) break;;
     esac
     shift
   done
 

   args=("$@")

   [[ -z "${hostname-}" ]] && die "Missing required parameter:hostname"

   return 0
}

parse_params "$@"

(
cat<<EOF

gremlin.graph=org.janusgraph.core.JanusGraphFactory

storage.backend=cql
storage.hostname=$hostname
storage.username=cassandra
storage.password=cassandra
storage.cql.keyspace=janusgraph

cache.db-cache = true
cache.db-cache-clean-wait = 20
cache.db-cache-time = 180000
cache.db-cache-size = 0.25

ids.block-size=200000
storage.batch-loading=true
# graph.allow-upgrade=true

EOF
) > ${output_dir}/janusgraph-cql-server.properties

chmod go-r ${output_dir}/janusgraph-cql-server.properties
