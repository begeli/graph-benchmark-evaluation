#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

usage() {
   cat << EOF
Usage: $(basename "${BASH_SOURCE[0]}") --nodes <NODE_LIST> [--base-dir <PATH>] [--snapshot-dir <PATH>]

Available options:

-h, --help         Print this help and exit
    --nodes        List of hostnames in slurm list representation to use for the cluster. 
                     Must contain at least one node.
                     Example: nid0000[1-3],nid00042
    --base-dir     Base directory where this script resides
                     [default: /scratch/snx3000/${USER}/janusgraph-bench]
    --snapshot-dir Directory where the Cassandra snapshot resides
                     [default: /scratch/snx3000/${USER}/janusgraph-bench/cassandra/snapshot]
EOF
   exit
}

cleanup() {
   trap - SIGINT SIGTERM ERR EXIT
}

msg() {
   echo >&2 -e "${1-}"
}

die() {
   local msg=$1
   local code=${2-1}
   msg "$msg"
   exit "$code"
}

parse_params() {
   node_list=''
   base_dir="/scratch/snx3000/${USER}/janusgraph-bench"
   snapshot_dir="${base_dir}/cassandra/snapshot"
   
   while :; do
     case "${1-}" in
     -h | --help) usage;;
     -v | --verbose) set -x ;;
     --nodes)
	node_list="${2-}"
	shift
	;;
     --base-dir)
	base_dir="${2-}"
	shift
	;;
     --snapshot-dir) 
	snapshot_dir="${2-}"
	shift
	;;
     -?*) die "Unknown option: $1" ;;
     *) break;;
     esac
     shift
   done

   args=("$@")

   [[ -z "${node_list-}" ]] && die "Missing required parameter:nodes"

   return 0
}

function join_by {
   local delimiter=${1-} list=${2-}
   if shift 2; then
      printf %s "$list" "${@/#/$delimiter}"
   fi
}

parse_params "$@"

# TODO: Ensure snapshot directory exists and it is correct

node_list_array=($(scontrol show hostnames ${node_list}))
ip_addresses=()
for node in "${node_list_array[@]}"
do
   ip_addresses+=($(ssh ${node} 'hostname -i' 2> /dev/null))
done
cassandra_ip_addresses=$(join_by "," "${ip_addresses[@]}")

image_dir="${base_dir}/cassandra"

module load singularity

msg
msg "Starting Cassandra instance locally..."
msg 

singularity instance start --writable-tmpfs \
--bind ${snapshot_dir}:/var/lib/cassandra/janusgraph \
${image_dir}/cassandra.sif cassandra

msg
msg "Starting importing the Cassandra snapshot..."
msg

tables=(
   "edgestore" 
   "edgestore_lock_" 
   "graphindex" 
   "graphindex_lock_" 
   "janusgraph_ids" 
   "system_properties" 
   "system_properties_lock_" 
   "systemlog" 
   "txlog"
)
for table in "${tables[@]}"
do
   singularity exec instance://cassandra sstableloader \
   -d ${cassandra_ip_addresses} \
   -u cassandra \
   -pw cassandra \
   /var/lib/cassandra/janusgraph/${table}
done

msg 
msg "Loading snapshot completed."
msg
msg "Closing local Cassandra instance..."
msg

singularity instance stop cassandra
